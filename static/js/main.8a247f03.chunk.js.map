{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","json","elements","type","name","title","isRequired","survey","options","console","log","JSON","stringify","data","model","Survey","this","onComplete","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,mBCKTA,E,4MAGJC,KAAO,CACNC,SAAU,CACT,CAAEC,KAAM,OAAQC,KAAM,eAAgBC,MAAO,qBAAsBC,YAAY,K,gDAKjF,SAAWC,EAAQC,GAElBC,QAAQC,IAAI,mBAAqBC,KAAKC,UAAUL,EAAOM,S,oBAExD,WAIC,IAAIC,EAAQ,IAAIC,QAAaC,KAAKf,MAClC,OAAQ,cAAC,SAAD,CAAea,MAAOA,EAAOG,WAAYD,KAAKC,iB,GAnBvCC,aAkCHlB,IC3BAmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a247f03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport * as Survey from \"survey-react\";\nimport { React, Component } from \"react\";\n\nclass App extends Component {\n  //Define Survey JSON\n  //Here is the simplest Survey with one text question\n  json = {\n   elements: [\n    { type: \"text\", name: \"customerName\", title: \"What is your name?\", isRequired: true}\n   ]\n  };\n \n  //Define a callback methods on survey complete\n  onComplete(survey, options) {\n   //Write survey results into database\n   console.log(\"Survey results: \" + JSON.stringify(survey.data));\n  }\n  render() {\n   //Create the model and pass it into react Survey component\n   //You may create survey model outside the render function and use it in your App or component\n   //The most model properties are reactive, on their change the component will change UI when needed.\n   var model = new Survey.Model(this.json);\n   return (<Survey.Survey model={model} onComplete={this.onComplete}/>);\n   /*\n   //The alternative way. react Survey component will create survey model internally\n   return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n   */\n   //You may pass model properties directly into component or set it into model\n   // <Survey.Survey model={model} mode=\"display\"/>\n   //or \n   // model.mode=\"display\"\n   // <Survey.Survey model={model}/>\n   // You may change model properties outside render function. \n   //If needed react Survey Component will change its behavior and change UI.\n  }\n } \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}